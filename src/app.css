@import 'tailwindcss';
@plugin '@tailwindcss/forms';
@plugin '@tailwindcss/typography';
@custom-variant dark (&:where(.dark, .dark *));

@theme {
	/* FONTS */
	--font-sans: Inter, sans-serif;
	--font-sans--font-feature-settings: 'cv11';

	/* DASHBOARD COLORS LIGHT MODE */
	--color-primary-btn-bg-theme-light: oklch(55.8% 0.288 302.321);
	--color-primary-btn-hover-theme-light: oklch(70.2% 0.183 293.541);
	--color-secondary-btn-bg-theme-light: oklch(21% 0.034 264.665);
	--color-secondary-btn-hover-theme-light: color-mix(
		in oklab,
		var(--color-gray-900) 75%,
		transparent
	);
	--color-dark-text-theme-light: oklch(37.3% 0.034 259.733);
	--color-light-text-theme-light: oklch(70.7% 0.022 261.325);
	--color-primary: oklch(21% 0.034 264.665);
	--color-light-border-theme-light: oklch(87.2% 0.01 258.338);
	--color-primary-from-theme-light: oklch(55.8% 0.288 302.321);
	--color-secondary-to-theme-light: oklch(70.2% 0.183 293.541);

	/* DASHBOARD COLORS DARK MODE */
	--color-primary-btn-bg-theme-dark: color-mix(in oklab, oklch(13% 0.028 261.692) 75%, transparent);
	--color-primary-btn-hover-theme-dark: blue;
	--color-secondary-btn-bg-theme-dark: var(--color-primary-btn-bg-theme-dark);
	--color-secondary-btn-hover-theme-dark: color-mix(
		in oklab,
		var(--color-gray-900) 75%,
		transparent
	);
	--color-primary-theme-dark: oklch(27.8% 0.033 256.848);
	--color-dark-text-theme-dark: #ffffff;
	--color-light-text-theme-dark: oklch(27.8% 0.033 256.848);
	--color-light-border-theme-dark: oklch(44.6% 0.03 256.802);
	--color-primary-from-theme-dark: oklch(21% 0.034 264.665);
	--color-secondary-to-theme-dark: color-mix(in oklab, oklch(13% 0.028 261.692) 75%, transparent);

	/* ANIMATIONS */
	--animate-outterLogoRing: outterLogoRing 0.5s ease-in-out 0.4s;
	--animate-innerLogoRing: innerLogoRing 0.5s ease-in-out 0.2s;
	--animate-logoCircle: logoCircle 0.5s ease-in-out 0s;
	@keyframes outterLogoRing {
		0%,
		100% {
			transform: scale(1);
			fill: #000000;
		}
		50% {
			transform: scale(1.1);
			fill: #a140ff;
		}
	}
	@keyframes innerLogoRing {
		0%,
		100% {
			transform: scale(1);
			fill: #000000;
		}
		50% {
			transform: scale(1.1);
			fill: #a140ff;
		}
	}
	@keyframes logoCircle {
		0%,
		100% {
			transform: scale(1);
			fill: #000000;
		}
		50% {
			transform: scale(1.15);
			fill: #a140ff;
		}
	}
}

input[type='search']::-webkit-search-cancel-button {
	cursor: pointer;
	background-color: #000000;
	filter: grayscale(1);
}

.base {
	background-color: oklch(21% 0.034 264.665) !important;
	color: #ffffff !important;
}

html {
	overflow-y: unset;
	scrollbar-gutter: unset;
}

.loader {
	color: #ffffff;
	font-size: 14px;
	text-indent: -9999em;
	overflow: hidden;
	width: 1em;
	height: 1em;
	border-radius: 50%;
	position: relative;
	transform: translateZ(0);
	animation:
		mltShdSpin 1.7s infinite ease,
		round 1.7s infinite ease;
}

@keyframes mltShdSpin {
	0% {
		box-shadow:
			0 -0.83em 0 -0.4em,
			0 -0.83em 0 -0.42em,
			0 -0.83em 0 -0.44em,
			0 -0.83em 0 -0.46em,
			0 -0.83em 0 -0.477em;
	}
	5%,
	95% {
		box-shadow:
			0 -0.83em 0 -0.4em,
			0 -0.83em 0 -0.42em,
			0 -0.83em 0 -0.44em,
			0 -0.83em 0 -0.46em,
			0 -0.83em 0 -0.477em;
	}
	10%,
	59% {
		box-shadow:
			0 -0.83em 0 -0.4em,
			-0.087em -0.825em 0 -0.42em,
			-0.173em -0.812em 0 -0.44em,
			-0.256em -0.789em 0 -0.46em,
			-0.297em -0.775em 0 -0.477em;
	}
	20% {
		box-shadow:
			0 -0.83em 0 -0.4em,
			-0.338em -0.758em 0 -0.42em,
			-0.555em -0.617em 0 -0.44em,
			-0.671em -0.488em 0 -0.46em,
			-0.749em -0.34em 0 -0.477em;
	}
	38% {
		box-shadow:
			0 -0.83em 0 -0.4em,
			-0.377em -0.74em 0 -0.42em,
			-0.645em -0.522em 0 -0.44em,
			-0.775em -0.297em 0 -0.46em,
			-0.82em -0.09em 0 -0.477em;
	}
	100% {
		box-shadow:
			0 -0.83em 0 -0.4em,
			0 -0.83em 0 -0.42em,
			0 -0.83em 0 -0.44em,
			0 -0.83em 0 -0.46em,
			0 -0.83em 0 -0.477em;
	}
}

@keyframes round {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

@media (width >= 40rem) {
	html {
		overflow-y: scroll;
		scrollbar-gutter: stable;
	}
}

/*OPTION ONE*/
/*@media (prefers-reduced-motion: no-preference) {*/
/*	::view-transition-old(root) {*/
/*		animation-delay: 1000ms;*/
/*	}*/

/*	::view-transition-new(root) {*/
/*		animation: circle-in 1000ms;*/
/*	}*/

/*	@keyframes move-in {*/
/*		from {*/
/*			translate: 0 -100%;*/
/*		}*/
/*		to {*/
/*			translate: 0 0;*/
/*		}*/
/*	}*/

/*	@keyframes circle-in {*/
/*		from {*/
/*			clip-path: circle(0% at 50% 0%);*/
/*		}*/
/*		to {*/
/*			clip-path: circle(120% at 50% 0%);*/
/*		}*/
/*	}*/
/*}*/

/*OPTION TWO*/
/*@media (prefers-reduced-motion: no-preference) {*/
/*	::view-transition {*/
/*		background: #555;*/
/*	}*/
/*	::view-transition-image-pair(root) {*/
/*		perspective: 2500px;*/
/*		perspective-origin: center;*/
/*		transform-style: preserve-3d;*/
/*		transform-origin: 50% 50% 100vw;*/
/*		filter: drop-shadow(0px 0px 6px hsl(165deg 11% 3%))*/
/*		drop-shadow(0px 0px 25px hsl(165deg 11% 3%/50%));*/
/*	}*/
/*	::view-transition-old(root),*/
/*	::view-transition-new(root) {*/
/*		animation: 1.5s*/
/*		linear(*/
/*				0,*/
/*				0.324 9.1%,*/
/*				0.584 18.6%,*/
/*				0.782 28.6%,*/
/*				0.858 33.8%,*/
/*				0.92 39.2%,*/
/*				0.997 49.5%,*/
/*				1.021 55.1%,*/
/*				1.033 61%,*/
/*				1.035 71.7%,*/
/*				1*/
/*		);*/
/*		transform-style: preserve-3d;*/
/*		transform-origin: 50% 50% 0;*/
/*		!*   perspective: 800px; *!*/
/*		transform: translateZ(-50vw) scale(var(--scale)) rotatey(var(--rotation))*/
/*		translatez(50vw);*/
/*		backface-visibility: hidden;*/
/*	}*/
/*	::view-transition-old(root) {*/
/*		animation-name: reveal-out;*/
/*	}*/
/*	::view-transition-new(root) {*/
/*		animation-name: reveal-in;*/
/*	}*/

/*	@property --rotation {*/
/*		syntax: "<angle>";*/
/*		inherits: false;*/
/*		initial-value: 0deg;*/
/*	}*/
/*	@property --scale {*/
/*		syntax: "<number>";*/
/*		inherits: false;*/
/*		initial-value: 1;*/
/*	}*/

/*	@keyframes reveal-in {*/
/*		from {*/
/*			--rotation: -90deg;*/
/*			animation-timing-function: ease-in-out;*/
/*		}*/
/*		15% {*/
/*			--scale: 0.8;*/
/*			--rotation: -90deg;*/
/*		}*/
/*		85% {*/
/*			--scale: 0.8;*/
/*			--rotation: 0deg;*/
/*			animation-timing-function: ease-in-out;*/
/*		}*/
/*		to {*/
/*			--rotation: 0deg;*/
/*		}*/
/*	}*/
/*	@keyframes reveal-out {*/
/*		from {*/
/*			--rotation: 0deg;*/
/*			animation-timing-function: ease-in-out;*/
/*		}*/
/*		15% {*/
/*			--scale: 0.8;*/
/*			--rotation: 0deg;*/
/*		}*/
/*		85% {*/
/*			--scale: 0.8;*/
/*			--rotation: 90deg;*/
/*			animation-timing-function: ease-in-out;*/
/*		}*/
/*		to {*/
/*			--rotation: 90deg;*/
/*		}*/
/*	}*/
/*}*/

/*OPTION THREE*/
@media (prefers-reduced-motion: no-preference) {
	/* We want a view transition between pages */
	@view-transition {
		navigation: auto;
	}
	/* Note that the animation duration in here dictates
       how long it takes to actually "do" the navigation to
       the second page, so it really ought to agree with the
       duration of ::view-transition-new below so when the
       incoming animation finishes, the navigation happens. */
	::view-transition-group(root) {
		animation-duration: 1.5s;
	}

	/* To animate the value of a custom property, you
       have to declare it with @property.
       Our var(--time) will range between 0 and 1 */
	@property --time {
		syntax: '<number>';
		initial-value: 0;
		inherits: true;
	}

	/* A do-nothing animation for the outgoing page */
	@keyframes move-out {
		from {
		}
		to {
		}
	}

	/* actually animate time from a bit before 0 to a bit after 1,
       so that the wave appears a bit above the screen and ends a bit after */
	@keyframes move-in {
		from {
			--time: -0.1;
		}
		to {
			--time: 1.1;
		}
	}

	/* The old page has to have some transition animation defined,
          or it gets the default fade. */
	::view-transition-old(root) {
		animation: 2s ease-in both move-out;
	}

	/* The new page appears with our wave effect */
	::view-transition-new(root) {
		--humps: 1.5; /* the number of "waves" in the wave effect */
		--pi: 3.14; /* half of tau */
		--lr: calc(var(--humps) * pi); /* the amout of radians from left to right */
		--time: 0; /* how far we are through the animation */

		/* The wave is:
           --humps number of humps from left to right
           vertically positioned at 100% * --time (so it
              goes from top to bottom)
           horizontally offset (scrolled) by --time so that
              the wave fronts move left to right
           And we manually create a sine wave (well, technically a cosine wave)
              by calculating the height of each bit of the clip path every 10%
              of the way from left to right of the screen
           This seems close enough for government work, but people with sharp eyes
              might think the wave is not smooth enough, in which case add more lines
              to the clip path. The first number (10%) is the position of a point from
              left to right across the screen, and the second is the position of that
              point up and down; note that the 0.1 in the cos needs to agree with the 10%
              l-r position. */
		clip-path: polygon(
			0% 0%,
			0% calc(cos(calc(0 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			10% calc(cos(calc(0.1 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			20% calc(cos(calc(0.2 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			30% calc(cos(calc(0.3 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			40% calc(cos(calc(0.4 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			50% calc(cos(calc(0.5 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			60% calc(cos(calc(0.6 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			70% calc(cos(calc(0.7 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			80% calc(cos(calc(0.8 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			90% calc(cos(calc(0.9 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			100% calc(cos(calc(1 + var(--time)) * var(--lr)) * 10% + calc(100% * var(--time))),
			100% 0%
		);
		/* And declare the animation, which is what moves the wave */
		animation: 1.5s ease-in both move-in;
	}
}
